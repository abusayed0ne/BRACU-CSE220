

    #Task-1
    class KeyIndex:
      def __init__(self,k,minimum=0):
        mini = min(k)
        maxi = max(k)
        self.minimum = abs(mini)
        l = maxi - mini
        self.new = [None] * (l+1)
        for i in k:
          if self.new[i + self.minimum] == None:
            self.new[i + self.minimum] = 1
          else:
            self.new[i + self.minimum] += 1
        print(self.new)
      def Search(self,value):
        if (value + self.minimum) >= len(self.new)  or (value) < (-1)*(self.minimum):
          return False
        else:
          if self.new[value+self.minimum] != None:
            return True
          else:
            return False
      def Sort(self):
        sorted = []
        for i in range(len(self.new)):
          if self.new[i] != None:
            for j in range(self.new[i]):
              sorted.append(i-self.minimum) 
        return sorted

    a = KeyIndex([-2,4,3,4,-3])
    print(a.Search(-3))
    print(a.Sort())




    [1, 1, None, None, None, None, 1, 2]
    True
    [-3, -2, 3, 4, 4]

    #Task-2
    def hashing(arr):
      vow="aeiouAEIOU"
      hash = [0]*len(arr)
      for i in arr:
        consonant = 0
        sum = 0
        for j in i:
          if j not in '0123456789':
            if j not in vow:
              consonant+=1
          else:
            sum+=int(j)
        val=((consonant*24)+sum)%9
        for k in range(len(hash)):
          if val==k:
            if hash[val]==0:
              hash[val]=i
            else:
              start_idx=val
              for m in range(len(arr)):
                if hash[start_idx]==0:
                  hash[start_idx]=i
                  break                      
                start_idx=(start_idx+1)%len(hash)
      print(hash)

    hashing(["BZDYBD","ZRDYNYZ","YERBBDZR","ZBTRDS","BTZRS","ZTBRSD","TBZRTRS","NDTSRYR","FAASDDE"])

    ['BZDYBD', 'ZBTRDS', 'ZTBRSD', 'BTZRS', 'NDTSRYR', 'FAASDDE', 'ZRDYNYZ', 'YERBBDZR', 'TBZRTRS']
